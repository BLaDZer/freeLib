# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: CMake on Windows Server 2022 (latest) Qt 5

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE:     "Release"
  QT_VERSION:     "5.15.*"
  MINGW_VERSION:  "win64_mingw81"
  MINGW_PATH:     "mingw81_64"

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
      with:
        # Whether to checkout submodules: `true` to checkout submodules or `recursive` to
        # recursively checkout submodules.
        #
        # When the `ssh-key` input is not provided, SSH URLs beginning with
        # `git@github.com:` are converted to HTTPS.
        #
        # Default: false
        submodules: 'recursive'

    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        aqtversion: '==3.1.*'
        version: ${{ env.QT_VERSION }}
        host: 'windows'
        target: 'desktop'
        arch: ${{ env.MINGW_VERSION }}
        archives: 'qtbase icu'
        cache: 'true'
        cache-key-prefix: 'install-qt5-action'
        install-deps: "true"

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -G "MSYS Makefiles" -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

#    - name: Build proyect
#      working-directory: ${{github.workspace}}/build
#      run: |
#        mingw32-make.exe

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} -j3

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}
